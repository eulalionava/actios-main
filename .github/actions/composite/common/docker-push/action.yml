name: 'Build and Push Container Image'
description: 'Build Container Image, login to Registry and push'
inputs:

  docker-out-registry:
    description: "Docker Registry"
    required: true
  docker-out-username:
    description: "Docker Username"
    required: true
  docker-out-password:
    description: "Docker Password"
    required: true

  docker-in-login:
    description: "Requires auth for pullins"
    required: false
    type: boolean
    default: true
  docker-in-registry:
    description: "Docker Registry"
    required: false
  docker-in-username:
    description: "Docker Username"
    required: false
  docker-in-password:
    description: "Docker Password"
    required: false

  project-key:
    description: ""
    required: true
  docker-tag:
    description: "Docker Tag"
    required: false
    default: "latest"
  docker-project:
    description: "Docker project"
    required: false
    default: "oxzacrmdps01"
  base-dir:
    description: "Base Directory"
    required: false
    default: "."
  art-location:
    description: ""
    required: true
    default: ""
runs:
  using: "composite"
  steps:
      - name: Login to Pull Registry
        run: |
          podman login -u=${{ inputs.docker-in-username }} -p=${{ inputs.docker-in-password }} ${{ inputs.docker-in-registry}}
        shell: bash
        
      - uses: actions/download-artifact@v4
        with:
            name: ${{ inputs.project-key }}
            path: ${{ inputs.base-dir }}/${{ inputs.art-location }}/
            

      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ inputs.project-key }}
          context: "${{ inputs.base-dir }}"
          tags: ${{ inputs.docker-tag }}
          containerfiles: "${{ inputs.base-dir }}/Dockerfile"

      - name: Push To quay.io
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ inputs.docker-out-registry }}/${{ inputs.docker-project }}
          username: "${{ inputs.docker-out-username }}"
          password: "${{ inputs.docker-out-password }}"
